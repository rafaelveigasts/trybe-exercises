O que vamos aprender?

Agora que você já passou pelos fundamentos do desenvolvimento web e desenvolveu vários projetos incríveis, irá entrar de cabeça no desenvolvimento front-end , onde irá se aprofundar em HTML , CSS e JavaScript e também utilizar bibliotecas populares, como o React https://reactjs.org/ !

Desenvolvimento Front-End

Você irá aprender a utilizar a biblioteca React para criar aplicações de front-end que se conectam com APIs.

Você será capaz de:

Criar aplicações completas de front-end utilizando a biblioteca React .

Vamos começar!

O que vamos aprender?

Até aqui, você aprendeu como criar páginas que utilizam HTML , CSS e JavaScript . Além disso, você aprendeu uma série de recursos como os do ES6 , bibliotecas JavaScript , animações em CSS , entre tantos outros.

Toda essa base que você construiu no curso da Trybe é fundamental para que você tenha sucesso em qualquer nova tecnologia Web que você decidir aprender.

Nosso curso é focado em entregar uma pessoa desenvolvedora que atenda às necessidades do mercado e, pensando nisso, vamos dar o próximo passo! Ponha o cinto, agora a coisa ficou séria.

Iiiiiiiiiiit's tiiiime!!!!!


O React é uma das bibliotecas JavaScript de criação de interfaces mais utilizadas no mundo. Ela foi criada e é mantida pelo próprio Facebook . Veja seu site oficial aqui .
Nas próximas semanas, você irá aprofundar seus conhecimentos em React . Com muito esforço e dedicação, você chegará no nível de uma pessoa que programa React fluentemente.

E aí, o que achou? Muito bacana, né? O próximo passo é renderizarmos o famoso 'Hello, World!' via React, bora lá!

O que vamos aprender?

Hoje você vai conhecer os primeiros conceitos do React , os pilares sobre os quais a equipe do Facebook/Instagram o fez, assim como o motivo de essa tecnologia ter tido adoção tão massiva nos últimos anos.

Vamos ver o que diferencia React de JavaScript e depois vamos ver um pouco sobre classes. Ao final do dia vamos ter todas as informações para codar um componente básico em React !

Você será capaz de:

Saber a melhor forma para instalar um gerenciador de pacotes.
Inicializar um projeto em React
Utilizar JSX no React
Utilizar o ReactDOM.render para renderizar elementos numa página web.
Utilizar o import para usar código externo junto ao seu.

Por que isso é importante?

Como dito anteriormente, o React é a principal biblioteca de construção de UI's atualmente. Mas por quê? Quando falamos em React estamos geralmente nos referindo a todo o ecossistema que o envolve.

React
JSX
ES6
Webpack
Flux/Redux
axios/fetch
Jest/Mocha

A lista acima mostra algumas das tecnologias que fazem parte desse ecossistema e que te permitem criar aplicações Web de alta qualidade.
Por razões óbvias, desenvolver uma aplicação Web sem biblioteca/framework alguma é um problema que coloca em risco a produtividade de um time. Mas isso significa que vamos utilizar qualquer coisa? Definitivamente não! A escolha do React para o nosso curso tem a ver com a sua adoção, estabilidade, oportunidades e potencial longevidade.

Vamos lá, esse é um momento importante! Agora você vai iniciar a sua jornada através da tecnologia, que, certamente, vai te apresentar para o mercado.
Aperte o cinto e dedique 100% do seu foco para aprender React de maneira hardcore . Você certamente não vai se arrepender!
Antes de tudo, veremos sobre o gerenciador de pacotes que utilizaremos durante o curso, que é o npm .
A primeira coisa a se saber é que npm é o gerenciador de pacotes em si, ou seja, ele é quem será utilizado para instalar os pacotes em nossas aplicações React, enquanto o npx executa o comando de um pacote sem instalá-lo em si.
Como o create-react-app é um pacote que a única coisa que faz é criar todos os arquivos necessários para termos um app React, não rodamos ele mais de uma vez por projeto, nem precisamos do pacote instalado em nossas máquinas, por isso SEMPRE executamos ele com o npx e não com o npm .
Antes de iniciarmos o conteúdo vamos testar se temos o npm e o npx funcionando corretamente? Para isso, vamos criar uma pasta, em qualquer lugar, e vamos acessá-la através do terminal. Uma vez que estamos dentro da pasta, no terminal, vamos executar o comando abaixo:
Copiar
npx create-react-app testando-meu-computador
Em seguida acesse a pasta:
Copiar
cd testando-meu-computador
⚠️ Atenção ⚠️
Caso tenha ocorrido algum erro, verifique qual foi seu tipo de erro e siga algum dos passos a seguir, caso contrário pule essa parte e siga para a parte Continuando o teste .
Se seu problema foi com versionamento, siga para Instalando o nvm
Se seu problema é ao digitar npm start , em geral esse erro ocorre porque existe uma pasta node_modules no diretório pai. Verifique se no erro ele indica um caminho parecido com /home/minhaPastaPessoal/node_modules/babel-jest, acesse a minhaPastaPessoal, delete a node_modules, acesse a pasta testando-meu-computador e rode o comando npm start novamente.
Instalando o nvm
Atenção: Só realize esse passo se você teve algum problema de versionamento ao rodar o comando do passo anterior. Caso contrário siga para "Continuando o teste" .
Para instalar o nvm vamos seguir quatro passos (o segundo é muito importante, não deixe de fazer !)
Primeiro vamos rodar o comando abaixo no terminal.
Nota: Caso você utilize outro terminal que não seja o bash , troque, no comando, o bash pelo nome do terminal que está utilizando. Por exemplo, se você está usando o zsh , troque bash por zsh .
Copiar
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash
Para ficar mais evidente vamos ver como rodar o comando no zsh também:
Copiar
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | zsh
Vamos fechar TODAS as abas abertas do terminal. Elas precisam ser fechadas para que o script do passo anterior seja carregado no terminal.
Agora vamos abrir novamente o terminal e rodar o comando abaixo. Esse comando retornará a versão do nvm que acabamos de instalar, como o da foto na sequência:
Copiar
nvm --version

Imagem que mostra a versão do nvm instalada
Caso apareça a mensagem listada abaixo, volte ao segundo passo e o faça corretamente, fechando todas as abas de terminal que estiverem abertas.
Copiar
bash: command not found: nvm
Por fim, após todos os procedimentos bem sucedidos, vamos rodar o último comando:
Copiar
nvm install node
Antes de seguir para a parte "Continuando o teste" , vamos rodar o comando abaixo, o mesmo que tinha dado erro antes, agora ele dará certo e poderemos prosseguir:
Copiar
npx create-react-app testando-meu-computador
Continuando o teste
Após o npx terminar de executar, ele nos mostra um mini tutorial, em que teremos uma explicação sobre os principais comandos, como na foto abaixo.

Imagem que demonstra os comandos básicos do npm para usar o create-react-app
Para finalizarmos os testes, vamos utilizar os comandos que estão sendo sugeridos no final do tutorial (certifique-se de que está dentro da pasta criada pelo comando npx ):
Copiar
$ npm start
Após o npm start terminar de carregar (pode demorar um pouco), ele irá abrir uma aba em seu navegador e você verá algo parecido com o exemplo abaixo, o que significa que tudo está funcionando corretamente.

Imagem que demonstra que tudo funciona corretamente, mostrada no navegador
